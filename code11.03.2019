#!/usr/bin/env python
# -*- coding: utf-8 -*-

import pygame
from pygame import *
block=pygame.image.load("blok_1.png")
WIN_WIDTH = 1366
WIN_HEIGHT = 768
DISPLAY = (WIN_WIDTH, WIN_HEIGHT)
BACKGROUND_COLOR = "#4c5866"
PLATFORM_WIDTH = 59
PLATFORM_HEIGHT = 59
PLATFORM_COLOR = "#904d30"

MOVE_SPEED = 1
WIDTH = 35
HEIGHT = 63
COLOR = "#ff0000"
class Player(sprite.Sprite):
    def __init__(self, x, y):
        sprite.Sprite.__init__(self)
        self.xvel = 1  # скорость перемещения. 0 - стоять на месте
        self.startX = x  # Начальная позиция Х, пригодится когда будем переигрывать уровень
        self.startY = y
        self.image = Surface((WIDTH, HEIGHT))
        self.image.fill(Color(COLOR))
        self.rect = Rect(x, y, WIDTH, HEIGHT)  # прямоугольный объект

    def update(self, left, right):
        if left:
            self.xvel = -MOVE_SPEED  # Лево = x- n

        if right:
            self.xvel = MOVE_SPEED  # Право = x + n

        if not (left or right):  # стоим, когда нет указаний идти
            self.xvel = 0

        self.rect.x += self.xvel  # переносим свои положение на xvel

    def draw(self, screen):  # Выводим себя на экран
        screen.blit(self.image, (self.rect.x, self.rect.y))


def main():
    pygame.init()  # Инициация PyGame, обязательная строчка
    screen = pygame.display.set_mode(DISPLAY)  # Создаем окошко
    pygame.display.set_caption("Fight with Vofimort")  # Пишем в шапку
    bg = Surface((WIN_WIDTH, WIN_HEIGHT))  # Создание видимой поверхности
    # будем использовать как фон
    bg.fill(Color(BACKGROUND_COLOR))  # Заливаем поверхность сплошным цветом
    hero = Player(70, 70)  # создаем героя по (x,y) координатам
    left = right = False  # по умолчанию — стоим
    level = [
        "-------------------------------------------",
        "-                                         -",
        "-                                         -",
        "-                                         -",
        "-            --                           -",
        "-                           ------        -",
        "-----                                     -",
        "-                                         -",
        "-                   -------               -",
        "-                                         -",
        "-      ---                                -",
        "-                                         -",
        "-                                         -",
        "-   -----------                      ------",
        "-                        -------          -",
        "-              ---                        -",
        "-                   --                    -",
        "-                                         -",
        "-                                         -",
        "-                      -------------      -",
        "-                                         -",
        "-  -------------                          -",
        "-                                         -",
        "-------------------------------------------"]
    while 1:  # Основной цикл программы
        for e in pygame.event.get():  # Обрабатываем события
            if e.type == QUIT:
                raise SystemExit; QUIT
            if e.type == KEYDOWN and e.key == K_LEFT:
                left = True
            if e.type == KEYDOWN and e.key == K_RIGHT:
                right = True

            if e.type == KEYUP and e.key == K_RIGHT:
                right = False
            if e.type == KEYUP and e.key == K_LEFT:
                left = False
        hero.update(left, right)  # передвижение
        hero.draw(screen)  # отображение
        screen.blit(bg, (0, 0))  # Каждую итерацию необходимо всё перерисовывать
        x = y = 0  # координаты
        for row in level:  # вся строка
            for col in row:  # каждый символ
                if col == "-":
                    # создаем блок, заливаем его цветом и рисеум его
                    pf=block
                    #pf.fill(Color(PLATFORM_COLOR))
                    screen.blit(pf, (x, y))
                    hero.update(left, right)  # передвижение
                    hero.draw(screen)  # отображение

                x += PLATFORM_WIDTH  # блоки платформы ставятся на ширине блоков
            y += PLATFORM_HEIGHT  # то же самое и с высотой
            x = 0  # на каждой новой строчке начинаем с нуля
        pygame.display.update()


if __name__ == "__main__":
   main()
